apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2018-12-11T14:32:50Z
  generation: 1
  labels:
    app: prometheus-adapter
    chart: prometheus-adapter-v0.2.1
    heritage: Tiller
    release: prometheus-adapter
  name: prometheus-adapter
  namespace: kube-system
  resourceVersion: "54441"
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/prometheus-adapter
  uid: a3546135-fd51-11e8-a46b-080027cf54af
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-adapter
      release: prometheus-adapter
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 2d1ef90881b75aecf55ccd55957f4e0420a88cb2ebc0b5755788010d37e71f10
      creationTimestamp: null
      labels:
        app: prometheus-adapter
        chart: prometheus-adapter-v0.2.1
        heritage: Tiller
        release: prometheus-adapter
      name: prometheus-adapter
    spec:
      containers:
      - args:
        - /adapter
        - --secure-port=6443
        - --cert-dir=/tmp/cert
        - --logtostderr=true
        - --prometheus-url=https://monitoring-prometheus:9090
        - --prometheus-auth-incluster=false
        - --metrics-relist-interval=30s
        - --v=4
        - --config=/etc/adapter/config.yaml
        image: directxman12/k8s-prometheus-adapter-amd64:v0.4.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus-adapter
        ports:
        - containerPort: 6443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccount: prometheus-adapter
      serviceAccountName: prometheus-adapter
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-adapter
        name: config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-12-11T14:33:25Z
    lastUpdateTime: 2018-12-11T14:33:25Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: 2018-12-11T14:32:50Z
    lastUpdateTime: 2018-12-11T14:33:25Z
    message: ReplicaSet "prometheus-adapter-f9f7f9c78" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
